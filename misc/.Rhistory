ltraj.elk <- dl(ltraj.elk.df)
library(adehabitatHR)
E4
#determining ,
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))
plot(ltraj.elk)
summary(ltraj.elk)
summary(ltraj.elk[[5]])
ltraj.elk[[5]]
ltraj.elk[5]
#determining the "sig1" parameter for the brownian bridge
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))
E13_kernel <- kernelbb(ltr = ltraj.elk[5],sig1 = 2.2162,sig2 = 25)
image(E13_kernel)
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
MCHu.rast(E13_kernel)
raster(E13_kernel)
plot(raster(E13_kernel))
getverticeshr(E13_kernel, 95)
E13_kernel
?writeOGR()
writeOGR(getverticeshr(E13_kernel, 95), driver = "KML",dsn = "E13_home_range.kml")
writeOGR(getverticeshr(E13_kernel, 95), driver = "KML",dsn = "E13_home_range.kml", layer = "E13_home_range")
E13_hr <- getverticeshr(E13_kernel, 95)
E13_hr <- getverticeshr(E13_kernel, 95)
CRS(E13_hr) <- proj4string("+proj=utm +zone=10 +datum=WGS84")
spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
E13_hr <- getverticeshr(E13_kernel, 95)
E13_hr
E13_kernel
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
image(E13_kernel)
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
getverticeshr(E13_kernel, 95)
as.data.frame(getverticeshr(E13_kernel, 95))
summary(getverticeshr(E13_kernel, 95))
elk_locs %>%
select(ANIMAL_ID) %>%
unique(.)
unique(all_elk_locs$ANIMAL_ID)
write.csv(unique(all_elk_locs$ANIMAL_ID), "elk_names.csv"
)
write.csv(unique(elk_locs$ANIMAL_ID), "elk_names_mm.csv"
)
unique(elk_locs$ANIMAL_ID) %in%  unique(all_elk_locs$ANIMAL_ID)
unique(all_elk_locs$ANIMAL_ID)  %in% unique(elk_locs$ANIMAL_ID)
other_elk <- unique(all_elk_locs$ANIMAL_ID)  %in% unique(elk_locs$ANIMAL_ID)
other_elk <- as.logical((other_elk*-1)+1)
unique(all_elk_locs$ANIMAL_ID)[other_elk]
write.csv(unique(all_elk_locs$ANIMAL_ID)[other_elk], "other_elk.csv"
)
image(E13_kernel)
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
#plotting the home range
image(E13_kernel)
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
class(E13_kernel)
getverticeshr(E13_kernel, 95)
E13_hr <- getverticeshr(E13_kernel, 95)
CRS(E13_hr) <- proj4string("+proj=utm +zone=10 +datum=WGS84")
CRS(E13_hr) <- proj4string(CRS("+proj=utm +zone=10 +datum=WGS84"))
plot(E13_hr)
summary(E13_hr)
E13_hr
summary(E13_hr)
CRS(E13_hr) <- proj4string(CRS("+proj=utm +zone=10 +datum=WGS84"))
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
E13_hr
summary(E13_hr)
writeOGR(E13_hr, dsn = "E13_home_range.kml", driver = "KML", layer = "E13")
?spTransform
spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
summary(spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84")))
E13_hr <- spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
#writing a kml file of the home range
writeOGR(getverticeshr(E13_kernel, 95), driver = "KML",dsn = "E13_home_range.kml", layer = "E13_home_range")
class(E13hr)
class(E13_hr)
summary(E13_hr)
E13_hr <- getverticeshr(E13_kernel, 95)
CRS(E13_hr) <- proj4string("+proj=utm +zone=10 +datum=WGS84")
E13_hr <- getverticeshr(E13_kernel, 95)
summary(E13_hr)
E13_hr <- getverticeshr(E13_kernel, 95)
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
summary(E13_hr)
spTransform(E13_hr, CRSobj = CRS("+proj=latlon +datum=WGS84"))
E13_hr <- getverticeshr(E13_kernel, 95)
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
E13_hr <- getverticeshr(E13_kernel, 95)
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
E13_hr <- spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
summary(E13_hr)
proj4string(E13_hr) <- CRS("+proj=longlat +datum=WGS84")
summary(E13_hr)
E13_hr <- getverticeshr(E13_kernel, 95)
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
summary(E13_hr)
plot(E13_hr)
E13_hr <- getverticeshr(E13_kernel, 95)
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
E13_hr <- spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
summary(E13_hr)
writeOGR(E13_hr, dsn = "E13_home_range.kml", driver = "KML", layer = "E13")
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
E13_hr <- getverticeshr(E13_kernel, 95)
proj4string(E13_hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
E13_hr <- spTransform(E13_hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
writeOGR(E13_hr, dsn = "E13_home_range1.kml", driver = "KML", layer = "E13")
?writeOGR
ogrDrivers()
ogrDrivers()
writeOGR(E13_hr, dsn = "E13_home_range", driver = "ESRI Shapefile", layer = "E13")
?kernelbb
E13 <- subset(elk_locs, elk_locs$AID == "E13")
#determining the "sig1" parameter for the brownian bridge
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))
#creating a kernal density home range
E13_kernel <- kernelbb(ltr = ltraj.elk[5],sig1 = 2.2162,sig2 = 25)
#plotting the home range
image(E13_kernel)
plot(getverticeshr(E13_kernel, 95), add=TRUE, lwd=2)
#plotting the home range
image(E13_kernel)
?getverticeshr
library(ProjectTemplate)
str(ltraj.elk)
ltraj.elk[1]
summary(ltraj.elk[1])
summary(ltraj.elk[2])
summary(ltraj.elk[14])
summary(ltraj.elk[15])
#determining the "sig1" parameter for the brownian bridge
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))
#determining the "sig1" parameter for the brownian bridge
summary(liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10)))
#determining the "sig1" parameter for the brownian bridge
str(liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10)))
#determining the "sig1" parameter for the brownian bridge
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))[[1]]
#determining the "sig1" parameter for the brownian bridge
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))[[1]][1]
#determining the "sig1" parameter for the brownian bridge
class(liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))[[1]][1])
#determining the "sig1" parameter for the brownian bridge
class(liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))[[1]][[1]])
#determining the "sig1" parameter for the brownian bridge
liker(tr = ltraj.elk[5],sig2 = 25, rangesig1 = c(1,10))[[1]][[1]]
ltraj.elk[[1]]
ltraj.elk[1]
summary(ltraj.elk[1])
summary(ltraj.elk[1])[1]
class(summary(ltraj.elk[1])[1])
summary(ltraj.elk[1])[1][1,1]
HRmaker <- function(trajdata = ltraj.elk, elknum = 1, pos_error = 25){
AnimalID <- as.character(summary(ltraj.elk[elknum])[1][1,1])
sig1.x <- liker(tr = ltraj.elk[elknum],sig2 = pos_error, rangesig1 = c(1,10))[[1]][[1]]
#creating a kernal density home range
kernel <- kernelbb(ltr = ltraj.elk[elknum],sig1 = sig1.x,sig2 = pos_error)
hr <- getverticeshr(kernel, 95)
proj4string(hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
hr <- spTransform(hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
filename <- paste0(AnimalID,"_HR")
writeOGR(hr, dsn = filename, driver = "ESRI Shapefile", layer = AnimalID)
print(AnimalID)
}
elknum = 1
pos_error = 25
AnimalID <- as.character(summary(ltraj.elk[elknum])[1][1,1])
AnimalID
sig1.x <- liker(tr = ltraj.elk[elknum],sig2 = pos_error, rangesig1 = c(1,10))[[1]][[1]]
sig1.x
#creating a kernal density home range
kernel <- kernelbb(ltr = ltraj.elk[elknum],sig1 = sig1.x,sig2 = pos_error)
kernel
hr <- getverticeshr(kernel, 95)
hr
proj4string(hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
hr <- spTransform(hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
filename <- paste0(AnimalID,"_HR")
filename
getwd()
writeOGR(hr, dsn = filename, driver = "ESRI Shapefile", layer = AnimalID)
getwd()
HRmaker <- function(trajdata = ltraj.elk, elknum = 1, pos_error = 25){
AnimalID <- as.character(summary(ltraj.elk[elknum])[1][1,1])
sig1.x <- liker(tr = ltraj.elk[elknum],sig2 = pos_error, rangesig1 = c(1,10))[[1]][[1]]
#creating a kernal density home range
kernel <- kernelbb(ltr = ltraj.elk[elknum],sig1 = sig1.x,sig2 = pos_error)
hr <- getverticeshr(kernel, 95)
proj4string(hr) <- CRS("+proj=utm +zone=10 +datum=WGS84")
hr <- spTransform(hr, CRSobj = CRS("+proj=longlat +datum=WGS84"))
filename <- paste0(AnimalID,"_HR")
writeOGR(hr, dsn = filename, driver = "ESRI Shapefile", layer = AnimalID)
print(AnimalID)
}
for(i in 1:14){
HRmaker(elknum = i)
}
for(i in 2:14){
HRmaker(elknum = i)
}
HRmaker(elknum = 14)
HRmaker(elknum = 13)
HRmaker(elknum = 11)
?writeOGR
plot(ltraj.elk[12])
plot(ltraj.elk[11])
plot(ltraj.elk[10])
plot(ltraj.elk[13])
plot(ltraj.elk[14])
summary(ltraj.elk)
plot(ltraj.elk[14])
data.frame(x = c(41.74352, 41.432298, 41.430753, 41.727123, 41.74352), y = c(-123.607, -123.577838, -123.2873, -123.32927, -123.607))
stud_1 <- data.frame(x = c(41.74352, 41.432298, 41.430753, 41.727123, 41.74352), y = c(-123.607, -123.577838, -123.2873, -123.32927, -123.607))
SpatialPolygons(stud1, proj4string = CRS("+proj=longlat +datum=WGS84"))
stud_1 <- data.frame(x = c(41.74352, 41.432298, 41.430753, 41.727123, 41.74352), y = c(-123.607, -123.577838, -123.2873, -123.32927, -123.607))
SpatialPolygons(stud_1, proj4string = CRS("+proj=longlat +datum=WGS84"))
SpatialPoints(stud_1, proj4string = CRS("+proj=longlat +datum=WGS84"))
stud_1 <- SpatialPoints(stud_1, proj4string = CRS("+proj=longlat +datum=WGS84"))
SpatialPolygons(stud_1)
Polygon(stud_1)
SpatialPolygons(list(Polygons(list(stud_1), ID = "stud1")), proj4string = CRS("+proj=longlat +datum=WGS84"))
list(stud_1)
Polygons(list(stud_1), ID = "stud1")
SpatialPolygons(list(stud_1), ID = "stud1"), proj4string = CRS("+proj=longlat +datum=WGS84"))
?SpatialPolygons
SpatialPolygons(Srl = list(stud_1), proj4string = CRS("+proj=longlat +datum=WGS84"))
SpatialPolygons(Srl = list(polygon(stud_1)), proj4string = CRS("+proj=longlat +datum=WGS84"))
polygon(stud_1)
stud_1 <- data.frame(x = c(41.74352, 41.432298, 41.430753, 41.727123, 41.74352), y = c(-123.607, -123.577838, -123.2873, -123.32927, -123.607))
stud_1 <- SpatialPoints(stud_1, proj4string = CRS("+proj=longlat +datum=WGS84"))
polygon(stud_1)
stud_1
?polygon
stud_1 <- data.frame(x = c(41.74352, 41.432298, 41.430753, 41.727123, 41.74352), y = c(-123.607, -123.577838, -123.2873, -123.32927, -123.607))
polygon(stud_1)
polygon(stud_1)
summary(polygon(stud_1))
coords = matrix(c(78.46801, 19.53407,
78.46801, 19.74557,
78.83157, 19.74557,
78.83157, 19.53407,
78.46801, 19.53407),
ncol = 2, byrow = TRUE)
P1 = Polygon(coords)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
plot(Ps1, axes = TRUE)
list(polygons(list(stud_1))
)
?polygons
square <- rbind(c(255842.4, 4111578, 255862.4, 4111578, 255862.4, 4111558,
255842.4, 4111558, 255842.4, 4111578, 255842.4, 4111578),
c(257397.0, 4111309, 257417.0, 4111309, 257417.0, 4111289,
257397.0, 4111289, 257397.0, 4111309, 257397.0, 4111309))
ID <- c("SJER1", "SJER2")'
)
square
square<- rbind(c(255842.4, 4111578, 255862.4, 4111578, 255862.4, 4111558,
255842.4, 4111558, 255842.4, 4111578, 255842.4, 4111578),
c(257397.0, 4111309, 257417.0, 4111309, 257417.0, 4111289,
257397.0, 4111289, 257397.0, 4111309, 257397.0, 4111309))
square <- rbind(c(255842.4, 4111578, 255862.4, 4111578, 255862.4, 4111558,
255842.4, 4111558, 255842.4, 4111578, 255842.4, 4111578),
c(257397.0, 4111309, 257417.0, 4111309, 257417.0, 4111289,
257397.0, 4111289, 257397.0, 4111309, 257397.0, 4111309))
square
)
)
)
coords = cbind(78.46801, 19.53407)
coordsmax = cbind(78.83157, 19.74557 )
sp = SpatialPoints(coordsmax)
sp2 = SpatialPoints(coords)
r1 = rbind(coords, coordsmax[1, ])  # join
P1 = Polygon(r1)
Ps1 = Polygons(list(P1), ID = "a")
plot(Ps1)
coords = cbind(78.46801, 19.53407)
coordsmax = cbind(78.83157, 19.74557)
sp = SpatialPoints(coordsmax)
sp2 = SpatialPoints(coords)
coords = cbind(78.46801, 19.53407)
coordsmax = cbind(78.83157, 19.74557)
sp = SpatialPoints(coordsmax)
sp2 = SpatialPoints(coords)
r1 = rbind(coords, coordsmax[1, ])  # join
P1 = Polygon(r1)
Ps1 = Polygons(list(P1), ID = "a")
plot(Ps1)
install.packages("arulesViz")
library(arulesViz)
install.packages('arules')
library(arulesViz)
.libPaths()
copy.packages.between.libraries(from = "C:/Users/ahanb/Documents/R/win-library/3.3",
to = "C:/Users/ahanb/Documents/R/win-library/3.4", ask = FALSE, keep_old = TRUE, do_NOT_override_packages_in_new_R = TRUE)
?copy.packages.between.libraries
?copy.packages.between.libraries()
??copy.packages.between.libraries()
install.packages('installr')
library(installr)
copy.packages.between.libraries(from = "C:/Users/ahanb/Documents/R/win-library/3.3",
to = "C:/Users/ahanb/Documents/R/win-library/3.4", ask = FALSE, keep_old = TRUE, do_NOT_override_packages_in_new_R = TRUE)
setwd("C:/Users/ahanb/Documents/R/win-library/3.3")
ls()
setwd("~/R/win-library/3.3")
ls()
dir()
copy.packages.between.libraries(from = "C:/Users/ahanb/Documents/R/win-library/3.3",
to = "C:/Users/ahanb/Documents/R/win-library/3.4", ask = FALSE, keep_old = TRUE, do_NOT_override_packages_in_new_R = TRUE)
copy.packages.between.libraries(from = "C:/Users/ahanb/Documents/R/win-library/3.3/abind",
to = "C:/Users/ahanb/Documents/R/win-library/3.4", ask = FALSE, keep_old = TRUE, do_NOT_override_packages_in_new_R = TRUE)
library(sp)
library(tidyverse)
coords = matrix(c(78.46801, 19.53407,
78.46801, 19.74557,
78.83157, 19.74557,
78.83157, 19.53407,
78.46801, 19.53407),
ncol = 2, byrow = TRUE)
coords
P1 = Polygon(coords)
P1
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
Ps1
plot(Ps1, axes = TRUE)
coords = matrix(c(-123.607, 41.74352,
-123.577838, 41.430753,
-123.2873,  41.430753,
-123.32927, 41.727123,
-123.607, 41.74352),
ncol = 2, byrow = TRUE)
coords
P1 = Polygon(coords)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
plot(Ps1, axes = TRUE)
coords = matrix(c(-123.607, 41.74352,
-123.577838, 41.430753,
-123.2873,  41.430753,
-123.32927, 41.727123,
-123.607, 41.74352),
ncol = 2, byrow = TRUE)
P1 = Polygon(coords)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "study_area_1")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
plot(Ps1, axes = TRUE)
?writeOGR
library(rgdal)
getwd()
setwd("C:/Users/ahanb/OneDrive/Documents/Berkeley/AHB Research/elk/elk_R/Elk_R_project/output")
writeOGR(obj = Ps1, dsn = "study_area_1", layer = "study_area_1", driver = "ESRI Shapefile")
?SpatialPolygonsDataFrame
SpatialPolygonsDataFrame(Sr = Ps1)
as.SpatialPolygonsDataFrame(Ps1)
as(Ps1, "SpatialPolygonsDataFrame")
writeOGR(obj = as(Ps1, "SpatialPolygonsDataFrame"), dsn = "study_area_1", layer = "study_area_1", driver = "ESRI Shapefile")
as(Ps1, "SpatialPolygonsDataFrame")
?raster
setwd("C:/Users/ahanb/OneDrive/Documents/Berkeley/AHB Research/elk/elk_gis/Misc")
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c")
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c", layer = "burn_sev")
?readOGR
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c", layer = "burn_sev_c")
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = ".", layer = "SHAPEFILE")
ogrInfo("")
dir()
dir()
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c.zip", layer = "burn_sev_c")
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c", layer = "burn_sev_c")
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c", layer = "burn_sev_c")
?ogrInfo
dir()
getwd()
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c", layer = "burn_sev_c")
setwd("C:/Users/ahanb/OneDrive/Documents/Berkeley/AHB Research/elk/elk_gis/Misc/burn_sev_c")
#reading in a clipped vector file of burn severity and year of burn
readOGR(dsn = "burn_sev_c", layer = "burn_sev_c")
setwd("C:/Users/ahanb/OneDrive/Documents/Berkeley/AHB Research/elk/elk_gis/Misc")
ogrInfo("burn_sev_c")
ogrInfo("burn_sev_c", layer = "burn_sev_c")
file.exists("burn_sev_c")
library(raster)
shapefile("burn_sev_c")
#reading in a clipped vector file of burn severity and year of burn
burn_sev <- shapefile("burn_sev_c")
summary(burn_sev_c)
summary(burn_sev)
class(burn_sev)
raster(burn_sev)
getvalues(raster(burn_sev))
getValues(raster(burn_sev))
as.data.frame(burn_sev)
4*14
str(burn_sev)
getValues(raster(burn_sev))
class(burn_sev)
as.spatial.polygons.dataframe(burn_sev)
as.data.frame(burn_sev)
str(burn_sev[1])
plot(burn_sev)
class(burn_sev)
?SpatialPolygonsDataFrame
summary(burn_sev)
proj4string(burn_sev)
data(burn_sev)
burn_sev[data]
burn_sev$BURNSEV
burn_sev$FIRE_YEAR
?rasterize
bbox(burn_sev)
bbox(burn_sev)[2,2]
bbox(burn_sev)[1,2]
bbox(burn_sev)[2,1]
bbox(burn_sev)[2,2] - bbox(burn_sev)[2,1]
n_pixels <- (bbox(burn_sev)[2,2] - bbox(burn_sev)[2,1])/30
n_pixels
raster(ncol=36, nrow=18)
?raster
proj4string(burn_sev)
class(proj4string(burn_sev))
burn_ext <- bbox(obj = burn_sev)
str(burn_ext)
class(burn_ext)
burn_rast <- raster(ncol=n_pixels, nrow=n_pixels, ext = burn_ext, crs = proj4string(burn_sev))
?rastere
?raster
burn_ext <- as.extent(bbox(obj = burn_sev))
burn_ext <- extent(bbox(obj = burn_sev))
burn_ext
burn_rast <- raster(ncol=n_pixels, nrow=n_pixels, ext = burn_ext, crs = proj4string(burn_sev))
burn_rast
res(burn_rast)
res(burn_rast) <- c(30,30)
burn_rast
?rasterize
summary(burn_sev)
rasterize(x = burn_sev, y = burn_rast, field = FIRE_YEAR)
rasterize(x = burn_sev, y = burn_rast, field = "FIRE_YEAR")
burn_rast
proj4string(burn_sev)
coords()
?coords
?coords
coordinates(burn_sev)
rasterize(x = burn_sev, y = burn_rast, field = "FIRE_YEAR", fun = mean)
rasterize
showMethods("rasterize")
rasterize(x = burn_sev, y = burn_rast)
burn_rast_w_vals <- rasterize(x = burn_sev, y = burn_rast)
burn_rast_w_vals
summary(burn_rast_w_vals)
getValues(burn_rast_w_vals)
tail(getValues(burn_rast_w_vals))
as.data.frame(burn_sev)
subset(burn_sev, BEST_ASSES == YES)
subset(burn_sev, BEST_ASSES == "YES")
burn_sev_s <- subset(burn_sev, BEST_ASSES == "YES")
as.data.frame(burn_sev_s)
burn_sev_s <- subset(burn_sev, BEST_ASSES == "YES")
burn_ext <- extent(bbox(obj = burn_sev_s))
n_pixels <- (bbox(burn_sev_s)[2,2] - bbox(burn_sev_s)[2,1])/30
burn_rast <- raster(ncol=n_pixels, nrow=n_pixels, ext = burn_ext, crs = proj4string(burn_sev_s))
res(burn_rast) <- c(30,30)
burn_rast_w_vals <- rasterize(x = burn_sev, y = burn_rast, field = "FIRE_YEAR")
burn_rast_w_vals <- rasterize(x = burn_sev, y = burn_rast, field = "FIRE_YEAR", small = TRUE)
plot(burn_sev_s)
as.data.frame(burn_sev_s)
plot(subset(burn_sev, BEST_ASSES == "YES" , FIRE_YEAR == 1994))
plot(subset(burn_sev, BEST_ASSES == "YES" , FIRE_YEAR == 1994, VB_ID == "1994BEAR"))
plot(subset(burn_sev, BEST_ASSES == "YES" , FIRE_YEAR == 1994, BURNSEV == 1))
burn_sev
burn_sev_s
...
variables(burn_sev_s)
head(str(burn_sev_s))
?sample
?extract
burn_rast_w_vals
burn_sev@data
burn_sev[burn_sev@data$VB_ID == "1987KING_TITUS",]
burn_sev[burn_sev@data$VB_ID == "1987KING_TITUS" & burn_sev@data$BEST_ASSES == "YES",]
plot(burn_sev[burn_sev@data$VB_ID == "1987KING_TITUS" & burn_sev@data$BEST_ASSES == "YES",])
king_titus <- burn_sev[burn_sev@data$VB_ID == "1987KING_TITUS" & burn_sev@data$BEST_ASSES == "YES",]
burn_ext <- extent(bbox(obj = king_titus))
burn_ext <- extent(bbox(obj = king_titus))
n_pixels <- (bbox(king_titus)[2,2] - bbox(king_titus)[2,1])/30
burn_rast <- raster(ncol=n_pixels, nrow=n_pixels, ext = burn_ext, crs = proj4string(burn_sev_s))
res(burn_rast) <- c(30,30)
burn_rast_k_titus <- rasterize(x = king_titus, y = burn_rast, field = "BURNSEV", small = TRUE)
plot(burn_rast_k_titus)
king_titus <- burn_sev[burn_sev@data$VB_ID == "2008PANTHER_MERRILL_HAYPRESS" & burn_sev@data$BEST_ASSES == "YES",]
burn_ext <- extent(bbox(obj = king_titus))
n_pixels <- (bbox(king_titus)[2,2] - bbox(king_titus)[2,1])/30
burn_rast <- raster(ncol=n_pixels, nrow=n_pixels, ext = burn_ext, crs = proj4string(burn_sev_s))
res(burn_rast) <- c(30,30)
burn_rast_panther_2008 <- rasterize(x = king_titus, y = burn_rast, field = "BURNSEV", small = TRUE)
plot(burn_rast_panther_2008)
burn_rast_panther_2008
king_titus
ltraj.elk
summary(ltraj.elk)
summary(ltraj.elk)$nb.reloc
sum(summary(ltraj.elk)$nb.reloc)
